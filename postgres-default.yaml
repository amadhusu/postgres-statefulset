apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-default
  labels:
    tier: database
spec:
  updateStrategy:
    type: RollingUpdate
  replicas: 2
  selector:
    matchLabels:
      app: postgres-default
  serviceName: postgres-default
  template:
    metadata:
      labels:
        app: postgres-default
    spec:
      containers:
      - capabilities: {}
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: postgres-default
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: postgres-default
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: postgres-default
        - name: PGDATA
          valueFrom:
            secretKeyRef:
              key: pgdata
              name: postgres-default
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: 'postgres:10.5'
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          failureThreshold: 6
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            memory: 512Mi
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgres-default-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: postgres-default-data
        persistentVolumeClaim:
          claimName: postgres-default
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - postgresql
      from:
        kind: ImageStreamTag
        name: postgresql:10-el8
        namespace: openshift
      lastTriggeredImage: ""
    type: ImageChange
  - type: ConfigChange
